import {
  LogLevel
} from "./api.js";
let __nextID = 0;
class ALogger {
  constructor(id, level = LogLevel.FINE, parent) {
    this.parent = parent;
    this.id = id || `logger-${__nextID++}`;
    this.level = typeof level === "string" ? LogLevel[level] : level;
  }
  id;
  level;
  addChild(logger) {
    logger.parent = this;
    return logger;
  }
  enabled(level) {
    return this.level <= level;
  }
  fine(...args) {
    this.log(LogLevel.FINE, args);
  }
  debug(...args) {
    this.log(LogLevel.DEBUG, args);
  }
  info(...args) {
    this.log(LogLevel.INFO, args);
  }
  warn(...args) {
    this.log(LogLevel.WARN, args);
  }
  severe(...args) {
    this.log(LogLevel.SEVERE, args);
  }
  none() {
  }
  log(level, args) {
    this.level <= level && this.logEntry([level, this.id, Date.now(), ...args]);
  }
}
export {
  ALogger
};
