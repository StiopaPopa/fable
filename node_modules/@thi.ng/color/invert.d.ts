import type { ColorOp, TypedColor } from "./api.js";
/**
 * Inverts the RGB channels of an RGBA color.
 *
 * @remarks
 * If `out` is null, the resulting color will be written back into `src`.
 *
 * @param out - result
 * @param src - source color
 */
export declare const invertRgb: ColorOp;
/**
 * Inverts the lowest 24 bits of an ARGB int. Does not modify alpha.
 *
 * @param src - packed RGB int
 */
export declare const invertInt: (src: number) => number;
/**
 * Inverts given color and writes result into `out` (or if null, mutates `src`
 * in place).
 *
 * @param out
 * @param src
 */
export declare const invert: import("@thi.ng/defmulti").MultiFn2<import("@thi.ng/vectors").Vec | null, TypedColor<any>, import("@thi.ng/vectors").Vec>;
//# sourceMappingURL=invert.d.ts.map