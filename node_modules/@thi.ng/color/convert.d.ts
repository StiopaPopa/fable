import type { Color, ColorMode, ColorSpec, Conversions, ReadonlyColor } from "./api.js";
export declare const CONVERSIONS: Partial<Record<ColorMode, Conversions>>;
/**
 * Registers conversions for given {@link ColorSpec}. Called by
 * {@link defColor}.
 *
 * @param spec -
 *
 * @internal
 */
export declare const defConversions: (mode: ColorMode, spec: ColorSpec<any, any>["from"]) => void;
/**
 * Converts a (raw, untyped) color from one mode to another and writes result
 * into `out` (or if null, back into `src`).
 *
 * @param res
 * @param src
 * @param destMode
 * @param srcMode
 */
export declare const convert: <T extends Color>(res: T | null, src: ReadonlyColor, destMode: ColorMode, srcMode: ColorMode) => T;
//# sourceMappingURL=convert.d.ts.map